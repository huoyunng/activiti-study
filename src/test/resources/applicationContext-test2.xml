<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd"
	default-lazy-init="true">

	<context:component-scan base-package="me.kafeitu.activiti.listener" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem:activiti;DB_CLOSE_DELAY=1000" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>
	
	<!-- Druid连接池-->
	<bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	    <!-- 基本属性 url、user、password -->
	    <property name="url" value="${url}" />
	    <property name="username" value="${username}" />
	    <property name="password" value="${password}" />
	    <!-- 配置初始化大小、最小、最大 -->
	    <property name="initialSize" value="1" />
	    <property name="minIdle" value="1" />
	    <property name="maxActive" value="20" />
	    <!-- 配置获取连接等待超时的时间 -->
	    <property name="maxWait" value="60000" />
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	    <property name="minEvictableIdleTimeMillis" value="300000" />
	    <property name="validationQuery" value="SELECT 1" />
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	    <property name="poolPreparedStatements" value="false" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	    <!-- 配置监控统计拦截的filters，默认stat，可选mergeStat/wall/log4j -->
	    <property name="filters" value="stat,wall,log4j" />
	    <property name="proxyFilters">
	        <list>
	            <ref bean="mergeStat_filter" />
	            <ref bean="log4j-filter" />
	        </list>
	    </property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- 加载activiti引擎 -->
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="false" />
		<property name="deploymentResources">
			<list>
				<value>classpath:/diagrams/Attachment.bpmn
				</value>
				<value>classpath:/diagrams/AutoAssignee.bpmn
				</value>
			</list>
		</property>
	</bean>

	<bean id="processEngineFactory" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>

	<!-- activiti的各种服务接口 -->
	<bean id="repositoryService" factory-bean="processEngineFactory"
		factory-method="getRepositoryService" />
	<bean id="runtimeService" factory-bean="processEngineFactory"
		factory-method="getRuntimeService" />
	<bean id="formService" factory-bean="processEngineFactory"
		factory-method="getFormService" />
	<bean id="identityService" factory-bean="processEngineFactory"
		factory-method="getIdentityService" />
	<bean id="taskService" factory-bean="processEngineFactory"
		factory-method="getTaskService" />
	<bean id="historyService" factory-bean="processEngineFactory"
		factory-method="getHistoryService" />
	<bean id="managementService" factory-bean="processEngineFactory"
		factory-method="getManagementService" />
</beans>